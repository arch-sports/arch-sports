calf_count <- length(which(data$calf == 'Y'))
low_ecc_count <- length(data$ecc_mean_force_assym[between(data$ecc_mean_force_assym, 0.05, 0.1)])
high_ecc_count <- length(data$ecc_mean_force_assym[data$ecc_mean_force_assym >= 0.10])
low_con_count <- length(data$con_mean_force_assym[between(data$con_mean_force_assym, 0.05, 0.1)])
high_con_count <- length(data$con_mean_force_assym[data$con_mean_force_assym >= 0.10])
low_land_count <- length(data$peak_assym[between(data$peak_assym, 0.05, 0.10)])
high_land_count <- length(data$peak_assym[data$peak_assym >= 0.10])
output_all <- data.frame(
quad = c('Quad Tightness', quad_count, round(quad_count/total*100, 1)),
hip = c('Hip Weakness', hip_count, round(hip_count/total*100, 1)),
lat = c('Lat Tightness', lat_count, round(lat_count/total*100, 1)),
calf = c('Calf Tightness', calf_count, round(calf_count/total*100, 1)),
low_ecc = c('Ecc. Assym. btw 5-10%', low_ecc_count, round(low_ecc_count/total*100, 1)),
high_ecc = c('Ecc. Assym. >10%', high_ecc_count, round(high_ecc_count/total*100, 1)),
low_con = c('Con. Assym. btw 5-10%', low_con_count, round(low_con_count/total*100, 1)),
high_con = c('Con. Assym. >10%', high_con_count, round(high_con_count/total*100, 1)),
low_land = c('Landing Assym. btw 5-10%', low_land_count, round(low_land_count/total*100, 1)),
high_land = c('Landing Assym. >10%', high_con_count, round(high_con_count/total*100, 1))
)
t_output_all <- t(output_all)
kable(t_output_all,
caption = 'Counts of Athletes',
row.names = FALSE,
col.names = c(' ', 'Count', paste('% Total (', length(data$jump_height), ')', sep = ''))
)
kable(t_output_all,
caption = 'Counts of Athletes',
row.names = FALSE,
col.names = c(' ', 'Count', paste('% Total (', length(data$jump_height), ')', sep = ''))
)
data_filter <- data[data$ecc_mean_force_assym > 0.10, ]
total <- length(data_filter$jump_height)
total <- length(data_filter$jump_height)
quad_count <- length(which(data_filter$quad == 'N'))
hip_count <- length(which(data_filter$gator == 'N'))
lat_count <- length(which(data_filter$lat == 'Y'))
calf_count <- length(which(data_filter$calf == 'Y'))
pain_count <- length(which(data_filter$pain == 'Y'))
output_filter <- data.frame(
quad = c('Quad Tightness', quad_count, round(quad_count/total*100, 1)),
hip = c('Hip Weakness', hip_count, round(hip_count/total*100, 1)),
lat = c('Lat Tightness', lat_count, round(lat_count/total*100, 1)),
calf = c('Calf Tightness', calf_count, round(calf_count/total*100, 1)),
pain = c('Pain History', pain_count, round(pain_count/total*100, 1))
)
t_output_filter <- t(output_filter)
kable(t_output_filter,
caption = 'Counts of Athletes with Ecc. Assym. >10%',
row.names = FALSE,
col.names = c(' ', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = ''))
)
kable(t_output_filter,
caption = 'Counts of Athletes with Ecc. Assym. >10%',
row.names = FALSE,
col.names = c(' ', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = ''))
)
data_filter <- data[data$con_mean_force_assym > 0.10, ]
data_filter <- data[data$con_mean_force_assym > 0.10, ]
total <- length(data_filter$jump_height)
quad_count <- length(which(data_filter$quad == 'N'))
hip_count <- length(which(data_filter$gator == 'N'))
lat_count <- length(which(data_filter$lat == 'Y'))
calf_count <- length(which(data_filter$calf == 'Y'))
pain_count <- length(which(data_filter$pain == 'Y'))
output_filter <- data.frame(
quad = c('Quad Tightness', quad_count, round(quad_count/total*100, 1)),
hip = c('Hip Weakness', hip_count, round(hip_count/total*100, 1)),
lat = c('Lat Tightness', lat_count, round(lat_count/total*100, 1)),
calf = c('Calf Tightness', calf_count, round(calf_count/total*100, 1)),
pain = c('Pain History', pain_count, round(pain_count/total*100, 1))
)
t_output_filter <- t(output_filter)
kable(t_output_filter,
caption = 'Counts of Athletes with Con. Assym. >10%',
row.names = FALSE,
col.names = c(' ', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = ''))
)
data_filter <- data[data$peak_assym > 0.10, ]
total <- length(data_filter$jump_height)
quad_count <- length(which(data_filter$quad == 'N'))
hip_count <- length(which(data_filter$gator == 'N'))
lat_count <- length(which(data_filter$lat == 'Y'))
calf_count <- length(which(data_filter$calf == 'Y'))
pain_count <- length(which(data_filter$pain == 'Y'))
output_filter <- data.frame(
quad = c('Quad Tightness', quad_count, round(quad_count/total*100, 1)),
hip = c('Hip Weakness', hip_count, round(hip_count/total*100, 1)),
lat = c('Lat Tightness', lat_count, round(lat_count/total*100, 1)),
calf = c('Calf Tightness', calf_count, round(calf_count/total*100, 1)),
pain = c('Pain History', pain_count, round(pain_count/total*100, 1))
)
t_output_filter <- transpose(output_filter)
kable(t_output_filter,
caption = 'Counts of Athletes with Landing Assym. >10%',
row.names = FALSE,
col.names = c(' ', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = ''))
)
View(t_output_filter)
View(t_output_all)
View(data)
?add_header_above
x <- knitr::kable(head(mtcars), "html")
# Add a row of header with 3 columns on the top of the table. The column
# span for the 2nd and 3rd one are 5 & 6.
add_header_above(x, c(" ", "Group 1" = 5, "Group 2" = 6))
x <- knitr::kable(head(mtcars), "html")
# Add a row of header with 3 columns on the top of the table. The column
# span for the 2nd and 3rd one are 5 & 6.
add_header_above(x, c(" ", "Group 1" = 5, "Group 2" = 6))
t_output_all <- t(output_all)
kable_all <- kable(t_output_all,
caption = 'Counts of Athletes',
row.names = FALSE,
col.names = c('', 'Count', paste('% Total (', length(data$jump_height), ')', sep = '')),
format = 'html',
align = 'lcc',
valign = 't'
)
kable_ecc <- kable(t_output_filter,
caption = 'Athletes with Ecc. Assym. >10%',
row.names = FALSE,
col.names = c('', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = '')),
format = 'html',
align = 'lcc',
valign = 't'
)
kable_con <- kable(t_output_filter,
caption = 'Athletes with Con. Assym. >10%',
row.names = FALSE,
col.names = c('', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = '')),
format = 'html',
align = 'lcc',
valign = 't'
)
kable_land <- kable(t_output_filter,
caption = 'Athletes with Landing Assym. >10%',
row.names = FALSE,
col.names = c('', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = '')),
format = 'html',
align = 'lcc',
valign = 't'
)
cbind(kable_ecc, kable_con, kable_land)
kable_full <- cbind(kable_ecc, kable_con, kable_land)
kable_full
x <- knitr::kable(head(mtcars), "html")
# Add a row of header with 3 columns on the top of the table. The column
# span for the 2nd and 3rd one are 5 & 6.
add_header_above(x, c(" ", "Group 1" = 5, "Group 2" = 6))
summary(data)
data_filter <- data[data$pain == 'Y',]
pain_counts <- data.frame(
total = c(length(data_filter$jump_height)),
hip = c(length(which(data_filter$gator == 'N'))),
quad = c(length(which(data_filter$quad == 'Y'))),
lat = c(length(which(data_filter$lat == 'Y'))),
calf = c(length(which(data_filter$calf == 'Y'))),
ecc = c(length(which(data_filter$ecc_mean_force_assym >= 0.1))),
con = c(length(which(data_filter$con_mean_force_assym >= 0.1))),
land = c(length(which(data_filter$peak_assym >= 0.1)))
)
data_filter <- data[data$pain == 'N',]
no_pain_counts <- data.frame(
total = c(length(data_filter$jump_height)),
hip = c(length(which(data_filter$gator == 'N'))),
quad = c(length(which(data_filter$quad == 'Y'))),
lat = c(length(which(data_filter$lat == 'Y'))),
calf = c(length(which(data_filter$calf == 'Y'))),
ecc = c(length(which(data_filter$ecc_mean_force_assym >= 0.1))),
con = c(length(which(data_filter$con_mean_force_assym >= 0.1))),
land = c(length(which(data_filter$peak_assym >= 0.1)))
)
pain_table <- rbind(pain_counts, no_pain_counts)
View(pain_table)
kable(pain_counts,
caption = 'Athletes with Aches and Pains',
row.names = c('With Pain', 'Without Pain'),
col.names = c('Total',
'Hip',
'Quad',
'Lat',
'Calf',
'Ecc.',
'Con.',
'Landing'),
align = 'c'
) %>%
add_header_above(
c('',
'',
'Tightness' = 3,
'Assymetries' = 3)
)
library(dplyr)
kable(pain_counts,
caption = 'Athletes with Aches and Pains',
row.names = c('With Pain', 'Without Pain'),
col.names = c('Total',
'Hip',
'Quad',
'Lat',
'Calf',
'Ecc.',
'Con.',
'Landing'),
align = 'c'
) %>%
add_header_above(
c('',
'',
'Tightness' = 3,
'Assymetries' = 3)
)
library(kableExtra)
kable(pain_counts,
caption = 'Athletes with Aches and Pains',
row.names = c('With Pain', 'Without Pain'),
col.names = c('Total',
'Hip',
'Quad',
'Lat',
'Calf',
'Ecc.',
'Con.',
'Landing'),
align = 'c'
) %>%
add_header_above(
c('',
'',
'Tightness' = 3,
'Assymetries' = 3)
)
kable(pain_counts,
caption = 'Athletes with Aches and Pains',
row.names = FALSE,
col.names = c('Total',
'Hip',
'Quad',
'Lat',
'Calf',
'Ecc.',
'Con.',
'Landing'),
align = 'c'
) %>%
add_header_above(
c('',
'',
'Tightness' = 3,
'Assymetries' = 3)
)
kable(pain_table,
caption = 'Athletes with Aches and Pains',
row.names = c('With Pain', 'Without Pain'),
col.names = c('Total',
'Hip',
'Quad',
'Lat',
'Calf',
'Ecc.',
'Con.',
'Landing'),
align = 'c'
) %>%
add_header_above(
c('',
'',
'Tightness' = 3,
'Assymetries' = 3)
)
kable(pain_table,
caption = 'Athletes with Aches and Pains',
row.names = FALSE,
col.names = c('Total',
'Hip',
'Quad',
'Lat',
'Calf',
'Ecc.',
'Con.',
'Landing'),
align = 'c'
) %>%
add_header_above(
c('',
'',
'Tightness' = 3,
'Assymetries' = 3)
)
data_filter <- data[data$pain == 'Y',]
total <- length(data_filter$jump_height)
pain_counts <- data.frame(
total = c(total),
hip = c(length(which(data_filter$gator == 'N'))/total),
quad = c(length(which(data_filter$quad == 'Y'))/total),
lat = c(length(which(data_filter$lat == 'Y'))/total),
calf = c(length(which(data_filter$calf == 'Y'))/total),
ecc = c(length(which(data_filter$ecc_mean_force_assym >= 0.1))/total),
con = c(length(which(data_filter$con_mean_force_assym >= 0.1))/total),
land = c(length(which(data_filter$peak_assym >= 0.1))/total)
)
data_filter <- data[data$pain == 'N',]
total <- length(data_filter$jump_height)
no_pain_counts <- data.frame(
total = c(length(data_filter$jump_height)/total),
hip = c(length(which(data_filter$gator == 'N'))/total),
quad = c(length(which(data_filter$quad == 'Y'))/total),
lat = c(length(which(data_filter$lat == 'Y'))/total),
calf = c(length(which(data_filter$calf == 'Y'))/total),
ecc = c(length(which(data_filter$ecc_mean_force_assym >= 0.1))/total),
con = c(length(which(data_filter$con_mean_force_assym >= 0.1))/total),
land = c(length(which(data_filter$peak_assym >= 0.1))/total)
)
pain_table <- rbind(pain_counts, no_pain_counts)
kable(pain_table,
caption = 'Athletes with Aches and Pains',
row.names = FALSE,
col.names = c('Total',
'Hip',
'Quad',
'Lat',
'Calf',
'Ecc.',
'Con.',
'Landing'),
align = 'c'
) %>%
add_header_above(
c('',
'',
'Tightness' = 3,
'Assymetries' = 3)
)
View(data)
data_filter <- data[data$pain == 'N',]
total <- length(data_filter$jump_height)
no_pain_counts <- data.frame(
total = c(length(data_filter$jump_height)/total),
hip = c(length(which(data_filter$gator == 'N'))/total),
quad = c(length(which(data_filter$quad == 'Y'))/total),
lat = c(length(which(data_filter$lat == 'Y'))/total),
calf = c(length(which(data_filter$calf == 'Y'))/total),
ecc = c(length(which(data_filter$ecc_mean_force_assym >= 0.1))/total),
con = c(length(which(data_filter$con_mean_force_assym >= 0.1))/total),
land = c(length(which(data_filter$peak_assym >= 0.1))/total)
)
pain_table <- rbind(pain_counts, no_pain_counts)
kable(pain_table,
caption = 'Athletes with Aches and Pains',
row.names = FALSE,
col.names = c('Total',
'Hip',
'Quad',
'Lat',
'Calf',
'Ecc.',
'Con.',
'Landing'),
align = 'c'
) %>%
add_header_above(
c('',
'',
'Tightness' = 3,
'Assymetries' = 3)
)
data_filter <- data[data$pain == 'Y',]
total <- length(data_filter$jump_height)
pain_counts <- data.frame(
total = c(length(data_filter$jump_height)/total),
hip = c(round(length(which(data_filter$gator == 'N'))/total * 100, 1)),
quad = c(round(length(which(data_filter$quad == 'Y'))/total * 100, 1)),
lat = c(round(length(which(data_filter$lat == 'Y'))/total * 100, 1)),
calf = c(round(length(which(data_filter$calf == 'Y'))/total * 100, 1)),
ecc = c(round(length(which(data_filter$ecc_mean_force_assym >= 0.1))/total * 100, 1)),
con = c(round(length(which(data_filter$con_mean_force_assym >= 0.1))/total * 100, 1)),
land = c(round(length(which(data_filter$peak_assym >= 0.1))/total * 100, 1))
)
data_filter <- data[data$pain == 'N',]
total <- length(data_filter$jump_height)
no_pain_counts <- data.frame(
total = c(length(data_filter$jump_height)/total),
hip = c(round(length(which(data_filter$gator == 'N'))/total * 100, 1)),
quad = c(round(length(which(data_filter$quad == 'Y'))/total * 100, 1)),
lat = c(round(length(which(data_filter$lat == 'Y'))/total * 100, 1)),
calf = c(round(length(which(data_filter$calf == 'Y'))/total * 100, 1)),
ecc = c(round(length(which(data_filter$ecc_mean_force_assym >= 0.1))/total * 100, 1)),
con = c(round(length(which(data_filter$con_mean_force_assym >= 0.1))/total * 100, 1)),
land = c(round(length(which(data_filter$peak_assym >= 0.1))/total * 100, 1))
)
pain_table <- rbind(pain_counts, no_pain_counts)
kable(pain_table,
caption = 'Athletes with Aches and Pains',
row.names = FALSE,
col.names = c('Total',
'Hip',
'Quad',
'Lat',
'Calf',
'Ecc.',
'Con.',
'Landing'),
align = 'c'
) %>%
add_header_above(
c('',
'',
'Tightness' = 3,
'Assymetries' = 3)
)
data_filter <- data[data$ecc_mean_force_assym >= 0.1 | data$con_mean_force_assym >= 0.1 | data$peak_assym >= 0.1,]
data_filter <- data[data$gator == 'N',]
total <- length(data_filter$jump_height)
gator_counts <- data.frame(
total = c(total),
pain = c(round(length(which(data_filter$pain == 'Y'))/total * 100, 1)),
hip = c(round(length(which(data_filter$gator == 'N'))/total * 100, 1)),
quad = c(round(length(which(data_filter$quad == 'Y'))/total * 100, 1)),
lat = c(round(length(which(data_filter$lat == 'Y'))/total * 100, 1)),
calf = c(round(length(which(data_filter$calf == 'Y'))/total * 100, 1)),
ecc = c(round(length(which(data_filter$ecc_mean_force_assym >= 0.1))/total * 100, 1)),
con = c(round(length(which(data_filter$con_mean_force_assym >= 0.1))/total * 100, 1)),
land = c(round(length(which(data_filter$peak_assym >= 0.1))/total * 100, 1)),
row.names = 'Weakness'
)
View(gator_counts)
View(data_filter)
data_filter <- complete.cases(data[data$pain == 'Y',])
data_filter <- data[complete.cases(data[data$pain == 'Y',]),]
View(data_filter)
data_filter <- data[data$pain == 'Y' && !is.na(data$jump_height),]
data_filter <- data[data$pain == 'Y' & !is.na(data$jump_height),]
data_filter <- data[data$gator == 'N' & !is.na(data$jump_height),]
total <- nrow(data_filter)
gator_counts <- data.frame(
total = c(total),
pain = c(round(length(which(data_filter$pain == 'Y'))/total * 100, 1)),
hip = c(round(length(which(data_filter$gator == 'N'))/total * 100, 1)),
quad = c(round(length(which(data_filter$quad == 'Y'))/total * 100, 1)),
lat = c(round(length(which(data_filter$lat == 'Y'))/total * 100, 1)),
calf = c(round(length(which(data_filter$calf == 'Y'))/total * 100, 1)),
ecc = c(round(length(which(data_filter$ecc_mean_force_assym >= 0.1))/total * 100, 1)),
con = c(round(length(which(data_filter$con_mean_force_assym >= 0.1))/total * 100, 1)),
land = c(round(length(which(data_filter$peak_assym >= 0.1))/total * 100, 1)),
row.names = 'Weakness'
)
View(gator_counts)
data <- read.csv(file = '../Data/pro_skills_testing.csv') %>%
mutate(jump_height = jump_height*2.54, Team = gsub('/', '_', Team), Athlete = paste(First, Last, sep = " "))
data <- data[!is.na(data$jump_height),]
data_filter <- data[data$gator == 'N',]
total <- nrow(data_filter)
gator_counts <- data.frame(
total = c(total),
pain = c(round(length(which(data_filter$pain == 'Y'))/total * 100, 1)),
hip = c(round(length(which(data_filter$gator == 'N'))/total * 100, 1)),
quad = c(round(length(which(data_filter$quad == 'Y'))/total * 100, 1)),
lat = c(round(length(which(data_filter$lat == 'Y'))/total * 100, 1)),
calf = c(round(length(which(data_filter$calf == 'Y'))/total * 100, 1)),
ecc = c(round(length(which(data_filter$ecc_mean_force_assym >= 0.1))/total * 100, 1)),
con = c(round(length(which(data_filter$con_mean_force_assym >= 0.1))/total * 100, 1)),
land = c(round(length(which(data_filter$peak_assym >= 0.1))/total * 100, 1)),
row.names = 'Weakness'
)
View(data_filter)
View(data)
data_filter <- data[data$pain == 'Y',]
total <- nrow(data_filter)
pain_counts <- data.frame(
total = c(total),
pain = c(round(length(which(data_filter$pain == 'Y'))/total * 100, 1)),
hip = c(round(length(which(data_filter$gator == 'N'))/total * 100, 1)),
quad = c(round(length(which(data_filter$quad == 'Y'))/total * 100, 1)),
lat = c(round(length(which(data_filter$lat == 'Y'))/total * 100, 1)),
calf = c(round(length(which(data_filter$calf == 'Y'))/total * 100, 1)),
ecc = c(round(length(which(data_filter$ecc_mean_force_assym >= 0.1))/total * 100, 1)),
con = c(round(length(which(data_filter$con_mean_force_assym >= 0.1))/total * 100, 1)),
land = c(round(length(which(data_filter$peak_assym >= 0.1))/total * 100, 1)),
row.names = 'Pain'
)
View(data_filter)
data_filter <- data[data$pain == 'N',]
total <- nrow(data_filter)
no_pain_counts <- data.frame(
total = c(total),
pain = c(round(length(which(data_filter$pain == 'Y'))/total * 100, 1)),
hip = c(round(length(which(data_filter$gator == 'N'))/total * 100, 1)),
quad = c(round(length(which(data_filter$quad == 'Y'))/total * 100, 1)),
lat = c(round(length(which(data_filter$lat == 'Y'))/total * 100, 1)),
calf = c(round(length(which(data_filter$calf == 'Y'))/total * 100, 1)),
ecc = c(round(length(which(data_filter$ecc_mean_force_assym >= 0.1))/total * 100, 1)),
con = c(round(length(which(data_filter$con_mean_force_assym >= 0.1))/total * 100, 1)),
land = c(round(length(which(data_filter$peak_assym >= 0.1))/total * 100, 1)),
row.names = 'No Pain'
)
data_filter <- data[data$gator == 'N',]
data_filter <- data[data$pain == 'N',]
total <- nrow(data_filter)
no_pain_counts <- data.frame(
total = c(total),
pain = c(round(length(which(data_filter$pain == 'Y'))/total * 100, 1)),
hip = c(round(length(which(data_filter$gator == 'N'))/total * 100, 1)),
quad = c(round(length(which(data_filter$quad == 'Y'))/total * 100, 1)),
lat = c(round(length(which(data_filter$lat == 'Y'))/total * 100, 1)),
calf = c(round(length(which(data_filter$calf == 'Y'))/total * 100, 1)),
ecc = c(round(length(which(data_filter$ecc_mean_force_assym >= 0.1))/total * 100, 1)),
con = c(round(length(which(data_filter$con_mean_force_assym >= 0.1))/total * 100, 1)),
land = c(round(length(which(data_filter$peak_assym >= 0.1))/total * 100, 1)),
row.names = 'No Pain'
)
data_filter <- data[data$pain === 'N',]
