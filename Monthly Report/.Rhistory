full_width = TRUE,
fixed_thead = TRUE
) %>%
column_spec(2, image = spec_plot(split_data, same_lim = FALSE))
quarto_render('./Monthly_Report_Quarto.qmd',
output_format = 'html',
output_file = paste(year(Sys.Date()), '_', month_test, '_Monthly Report.html', sep = ""),
execute_params = list(month_test = month_test))
quarto_render('./Monthly_Report_Quarto.qmd',
output_format = 'html',
output_file = paste(year(Sys.Date()), '_', month_test, '_Monthly Report.html', sep = ""),
execute_params = list(month_test = month_test))
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
library(kableExtra)
library(tidyverse)
library(ggplot2)
# Read data from summary_data csv
month_test <- 6
file_name <- paste(year(Sys.Date()), '_', month_test, '_summary_data.csv'
, sep = '')
full_file_name <- paste(year(Sys.Date()), '_', month_test, '_testing_data.csv', sep = '')
data           <- read.csv(file = file_name)
athletes       <- unique(data$NAME)
full_data      <- read.csv(file = full_file_name)
full_data      <- full_data[full_data$NAME %in% athletes,] %>%
arrange(NAME)
full_data$Date <- as.Date(full_data$DATE)
tests          <- full_data %>%
select(-NAME,
-DATE,
-AGE,
-IMTP_PEAK,
-DATE_MONTH,
-NORDBORD_L,
-NORDBORD_R,
-NORDBORD_DIFF,
-DSI,
-OLD,
-YOUNG,
-ADULT,
-CMJ_FLIGHT) %>%
names()
<!-- ::: {.panel-tabset} -->
<!-- # ```{r} -->
<!-- ::: -->
::: panel-tabset
# Create CMJ Table
test_athletes <- unique(data$Name[!is.na(data$CMJ...Imp.Mom_Current)])
test_data <- full_data[full_data$Name %in% test_athletes,]
split_data <- split(test_data$CMJ...Imp.Mom, test_data$Name)
View(data)
data <- read_sheet(test_url, sheet = test_sheet)
data %>%
mutate(YOUNG      = ifelse(data$AGE <= 13, 1, 0),
OLD        = ifelse(data$AGE> 13 & data$AGE <= 18, 1, 0),
ADULT      = ifelse(data$AGE > 18, 1, 0),
DATE_MONTH = month(DATE),
NORDBORD   = rowMeans(cbind(data$NORDBORD_L, data$NORDBORD_R), na.rm = TRUE)) %>%
write.csv(file = file_name,
row.names = FALSE)
data           <- read.csv(file = file_name)
athletes       <- unique(data$NAME)
full_data      <- read.csv(file = full_file_name)
full_data      <- full_data[full_data$NAME %in% athletes,] %>%
arrange(NAME)
full_data$Date <- as.Date(full_data$DATE)
tests          <- full_data %>%
select(-NAME,
-DATE,
-AGE,
-IMTP_PEAK,
-DATE_MONTH,
-NORDBORD_L,
-NORDBORD_R,
-NORDBORD_DIFF,
-DSI,
-OLD,
-YOUNG,
-ADULT,
-CMJ_FLIGHT) %>%
names()
data <- read_sheet(test_url, sheet = test_sheet)
# Import testing data
test_url <- 'https://docs.google.com/spreadsheets/d/1VzdlsDCA-X8HVKvUktG1A5XZNiq3IuOwX2Zbq8k6Iu0/edit?gid=2006047091#gid=2006047091'
test_sheet <- 'MASTER DATA TABLE'
file_name <- paste('./', year(Sys.Date()),'_', month_test, '_testing_data.csv', sep = '')
find_min <- c('PRO_AGILITY', 'SPLIT_10', 'SPRINT_20', 'SHUTTLE_300')
if (!file.exists(file_name)) {
data <- read_sheet(test_url, sheet = test_sheet)
data %>%
mutate(YOUNG       = ifelse(data$AGE <= 13, 1, 0),
OLD         = ifelse(data$AGE> 13 & data$AGE <= 18, 1, 0),
ADULT       = ifelse(data$AGE > 18, 1, 0),
DATE_MONTH  = month(DATE),
NORDBORD    = rowMeans(cbind(data$NORDBORD_L, data$NORDBORD_R), na.rm = TRUE),
PRO_AGILITY = PRO_AGILITY * -1,
SPLIT_10    = SPLIT_10 * -1,
SPRINT_20   = SPRINT_20 * -1,
SHUTTLE_300 = SHUTTLE_300 * -1) %>%
write.csv(file = file_name,
row.names = FALSE)
} else {
data <- read.csv(file = file_name)
}
month_test <- readline(prompt = 'Enter the test month: ')
month_test <- as.numeric(month_test)
# Import testing data
test_url <- 'https://docs.google.com/spreadsheets/d/1VzdlsDCA-X8HVKvUktG1A5XZNiq3IuOwX2Zbq8k6Iu0/edit?gid=2006047091#gid=2006047091'
test_sheet <- 'MASTER DATA TABLE'
file_name <- paste('./', year(Sys.Date()),'_', month_test, '_testing_data.csv', sep = '')
find_min <- c('PRO_AGILITY', 'SPLIT_10', 'SPRINT_20', 'SHUTTLE_300')
if (!file.exists(file_name)) {
data <- read_sheet(test_url, sheet = test_sheet)
data %>%
mutate(YOUNG       = ifelse(data$AGE <= 13, 1, 0),
OLD         = ifelse(data$AGE> 13 & data$AGE <= 18, 1, 0),
ADULT       = ifelse(data$AGE > 18, 1, 0),
DATE_MONTH  = month(DATE),
NORDBORD    = rowMeans(cbind(data$NORDBORD_L, data$NORDBORD_R), na.rm = TRUE),
PRO_AGILITY = PRO_AGILITY * -1,
SPLIT_10    = SPLIT_10 * -1,
SPRINT_20   = SPRINT_20 * -1,
SHUTTLE_300 = SHUTTLE_300 * -1) %>%
write.csv(file = file_name,
row.names = FALSE)
} else {
data <- read.csv(file = file_name)
}
# Get last month's and this month's testing data
data_last    <- data[month(data$DATE) == month_test - 1,]
data_current <- data[month(data$DATE) == month_test,]
# Get athletes who tested last month
athletes <- unique(data_current$NAME)
# Create function list for summary table
func_list <- list(
Current = ~last(.x, na_rm = TRUE),
Best = ~max(.x, na.rm = TRUE),
Best_change = ~(last(.x, na_rm = TRUE) - max(.x, na.rm = TRUE)),
Best_perc = ~((last(.x, na_rm = TRUE) - max(.x, na.rm = TRUE))/max(.x, na.rm = TRUE)),
Last = ~nth(.x, -2, na_rm = TRUE),
Last_change = ~(last(.x, na_rm = TRUE) - nth(.x, -2, na_rm = TRUE)),
Last_perc = ~((last(.x, na_rm = TRUE) - nth(.x, -2, na_rm = TRUE))/nth(.x, -2, na_rm = TRUE))
)
# Create variable list to exclude for summary table
var_list <- c(
'NAME',
'DATE',
'DATE_MONTH',
'AGE',
'CMJ_FLIGHT',
'IMTP_PEAK',
'YOUNG',
'OLD',
'ADULT',
'DSI',
'NORDBORD_DIFF',
'NORDBORD_L',
'NORDBORD_R'
)
summary_data <- data %>%
#select(-YOUNG, - OLD, -ADULT) %>%
group_by(NAME) %>%
summarise_at(
.vars = names(data)[!names(data) %in% var_list],
.funs = func_list
) %>%
filter(NAME %in% athletes)
summary_data
data
if (!file.exists(file_name)) {
data <- read_sheet(test_url, sheet = test_sheet)
data %>%
mutate(YOUNG       = ifelse(data$AGE <= 13, 1, 0),
OLD         = ifelse(data$AGE> 13 & data$AGE <= 18, 1, 0),
ADULT       = ifelse(data$AGE > 18, 1, 0),
DATE_MONTH  = month(DATE),
NORDBORD    = rowMeans(cbind(data$NORDBORD_L, data$NORDBORD_R), na.rm = TRUE),
PRO_AGILITY = PRO_AGILITY * -1,
SPLIT_10    = SPLIT_10 * -1,
SPRINT_20   = SPRINT_20 * -1,
SHUTTLE_300 = SHUTTLE_300 * -1) %>%
write.csv(file = file_name,
row.names = FALSE)
} else {
data <- read.csv(file = file_name)
}
head(data)
# Get last month's and this month's testing data
data_last    <- data[month(data$DATE) == month_test - 1,]
data_current <- data[month(data$DATE) == month_test,]
head(data_last)
athletes
# Get athletes who tested last month
athletes <- unique(data_current$NAME)
# Create function list for summary table
func_list <- list(
Current = ~last(.x, na_rm = TRUE),
Best = ~max(.x, na.rm = TRUE),
Best_change = ~(last(.x, na_rm = TRUE) - max(.x, na.rm = TRUE)),
Best_perc = ~((last(.x, na_rm = TRUE) - max(.x, na.rm = TRUE))/max(.x, na.rm = TRUE)),
Last = ~nth(.x, -2, na_rm = TRUE),
Last_change = ~(last(.x, na_rm = TRUE) - nth(.x, -2, na_rm = TRUE)),
Last_perc = ~((last(.x, na_rm = TRUE) - nth(.x, -2, na_rm = TRUE))/nth(.x, -2, na_rm = TRUE))
)
# Create variable list to exclude for summary table
var_list <- c(
'NAME',
'DATE',
'DATE_MONTH',
'AGE',
'CMJ_FLIGHT',
'IMTP_PEAK',
'YOUNG',
'OLD',
'ADULT',
'DSI',
'NORDBORD_DIFF',
'NORDBORD_L',
'NORDBORD_R'
)
summary_data <- data %>%
#select(-YOUNG, - OLD, -ADULT) %>%
group_by(NAME) %>%
summarise_at(
.vars = names(data)[!names(data) %in% var_list],
.funs = func_list
) %>%
filter(NAME %in% athletes)
head(summary_data)
head(summary_data)
for (name in names(summary_data)) {
for (test in find_min) {
if(test %in% name) {
summary_data[[name]] <- -1 * summary_data[[name]]
}
}
}
head(summary_data)
View(summary_data)
for (name in names(summary_data)) {
for (test in find_min) {
print(name)
print(test)
if(test %in% name) {
summary_data[[name]] <- -1 * summary_data[[name]]
}
}
}
for (name in names(summary_data)) {
for (test in find_min) {
if(test %in% name) {
print(paste(test, ' is in ', name, sep = ''))
summary_data[[name]] <- -1 * summary_data[[name]]
}
}
}
'SPRINT_20' %in% 'SPRINT_20_Current'
test <- 'SPRINT_20'
grep(test, 'SPRINT_20_Current')
test <- 'cmj'
grep(test, 'SPRINT_20_Current')
for (name in names(summary_data)) {
for (test in find_min) {
if(grep(test, name)) {
print(paste(test, ' is in ', name, sep = ''))
summary_data[[name]] <- -1 * summary_data[[name]]
}
}
}
for (name in names(summary_data)) {
for (test in find_min) {
if(grep(test, name) == 1) {
print(paste(test, ' is in ', name, sep = ''))
summary_data[[name]] <- -1 * summary_data[[name]]
}
}
}
?grep
grep(test, 'SPRINT_20_Current', value = TRUE)
for (name in names(summary_data)) {
for (test in find_min) {
if(length(grep(test, name)) != 0) {
print(paste(test, ' is in ', name, sep = ''))
summary_data[[name]] <- -1 * summary_data[[name]]
}
}
}
summary_data[summary_data == -Inf] <- NA
summary_data[summary_data == Inf] <- NA
write.csv(summary_data,
file = paste(year(Sys.Date()), '_', month_test, '_summary_data.csv', sep = ''),
row.names = FALSE)
# Read data from summary_data csv
month_test <- 6
file_name <- paste(year(Sys.Date()), '_', month_test, '_summary_data.csv'
, sep = '')
full_file_name <- paste(year(Sys.Date()), '_', month_test, '_testing_data.csv', sep = '')
data           <- read.csv(file = file_name)
athletes       <- unique(data$NAME)
full_data      <- read.csv(file = full_file_name)
full_data      <- full_data[full_data$NAME %in% athletes,] %>%
arrange(NAME)
full_data$Date <- as.Date(full_data$DATE)
tests          <- full_data %>%
select(-NAME,
-DATE,
-AGE,
-IMTP_PEAK,
-DATE_MONTH,
-NORDBORD_L,
-NORDBORD_R,
-NORDBORD_DIFF,
-DSI,
-OLD,
-YOUNG,
-ADULT,
-CMJ_FLIGHT) %>%
names()
# Create Nordbord Table
test_athletes <- unique(data$Name[!is.na(data$NORDBORD_Current)])
test_data <- full_data[full_data$Name %in% test_athletes,]
data$IMTP_FBW_Best_perc
# Create IMTP Table
test_athletes <- unique(data$NAME[!is.na(data$IMTP_FBW_Current)])
test_data <- full_data[full_data$NAME %in% test_athletes,]
split_data <- split(test_data$IMTP_FBW, test_data$NAME)
data[!is.na(data$IMTP_FBW_Current),] %>%
cbind('Trend' = '') %>%
select(
NAME,
Trend,
starts_with('IMTP.F.BW')) %>%
mutate(IMTP_FBW_Best_perc = (IMTP_FBW_Best_perc * 100),
IMTP_FBW_Last_perc = (IMTP_FBW_Last_perc * 100)) %>%
kable(
digits = 2,
row.names = FALSE,
col.names = c('NAME',
'Trend',
'Current',
'Best',
'Best Change',
'Best % Change',
'Previous',
'Previous Change',
'Previous % Change'
)
) %>%
kable_styling(
full_width = TRUE,
fixed_thead = TRUE
) %>%
column_spec(2, image = spec_plot(split_data, same_lim = FALSE))
# Create Pull-Up Table
test_athletes <- unique(data$NAME[!is.na(data$PULL_UPS_Current)])
test_data <- full_data[full_data$NAME %in% test_athletes,]
split_data <- split(test_data$PULL_UPS, test_data$NAME)
data[!is.na(data$PULL_UPS_Current),] %>%
cbind('Trend' = '') %>%
select(
NAME,
Trend,
starts_with('PULL_UPS')) %>%
mutate(PULL_UPS_Best_perc = (PULL_UPS_Best_perc * 100),
PULL_UPS_Last_perc = (PULL_UPS_Last_perc * 100)) %>%
kable(
digits = 2,
row.names = FALSE,
col.names = c('NAME',
'Trend',
'Current',
'Best',
'Best Change',
'Best % Change',
'Previous',
'Previous Change',
'Previous % Change'
)
) %>%
kable_styling(
full_width = TRUE,
fixed_thead = TRUE
) %>%
column_spec(2, image = spec_plot(split_data, same_lim = FALSE))
data[!is.na(data$IMTP_FBW_Current),]
data[!is.na(data$IMTP_FBW_Current),] %>% cbind('Trend' = '')
View(split_data)
test_data <- full_data[full_data$NAME %in% test_athletes,]
test <- split(test_data$PRO_AGILITY, test_data$NAME)
View(test)
View(full_data)
View(data)
for (name in names(data)) {
if(nanme %in% find_min) {
data[[name]] <- -1 * data[[name]]
}
}
for (name in names(data)) {
if(name %in% find_min) {
data[[name]] <- -1 * data[[name]]
}
}
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
?map_chr
quarto_render('./Monthly_Report_Quarto.qmd',
output_format = 'html',
output_file = paste(year(Sys.Date()), '_', month_test, '_Monthly Report.html', sep = ""),
execute_params = list(month_test = month_test))
quarto_render('./Monthly_Report_Quarto.qmd',
output_format = 'html',
output_file = paste(year(Sys.Date()), '_', month_test, '_Monthly Report.html', sep = ""),
execute_params = list(month_test = month_test))
quarto_render('./Monthly_Report_Quarto.qmd',
output_format = 'html',
output_file = paste(year(Sys.Date()), '_', month_test, '_Monthly Report.html', sep = ""),
execute_params = list(month = month_test))
View(test_data)
View(split_data)
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
library(kableExtra)
library(tidyverse)
library(ggplot2)
file_NAME <- paste(year(Sys.Date()), '_', params$month, '_summary_data.csv'
, sep = '')
full_file_NAME <- paste(year(Sys.Date()), '_', params$month, '_testing_data.csv', sep = '')
data           <- read.csv(file = file_NAME)
athletes       <- unique(data$NAME)
data           <- read.csv(file = file_NAME)
---
title: "Monthly Report"
```{r}
library(kableExtra)
library(tidyverse)
library(ggplot2)
file_NAME <- paste(year(Sys.Date()), '_', params$month, '_summary_data.csv'
, sep = '')
full_file_NAME <- paste(year(Sys.Date()), '_', params$month, '_testing_data.csv', sep = '')
data           <- read.csv(file = file_NAME)
athletes       <- unique(data$NAME)
full_data      <- read.csv(file = full_file_NAME)
full_data      <- full_data[full_data$NAME %in% athletes,] %>%
arrange(NAME)
full_data$Date <- as.Date(full_data$DATE)
tests          <- full_data %>%
select(-NAME,
-DATE,
-AGE,
-IMTP_PEAK,
-DATE_MONTH,
-NORDBORD_L,
-NORDBORD_R,
-NORDBORD_DIFF,
-DSI,
-OLD,
-YOUNG,
-ADULT,
-CMJ_FLIGHT) %>%
names()
#| output: asis
res <- purrr::map_chr(list('CMJ_IMP_MOM'), \(hw) {
knitr::knit_child('Monthly_Report_Template.qmd', envir = environment(), quiet = TRUE)
})
#| output: asis
res <- purrr::map_chr('CMJ_IMP_MOM', \(hw) {
knitr::knit_child('Monthly_Report_Template.qmd', envir = environment(), quiet = TRUE)
})
#| output: asis
res <- purrr::map_chr(tests, \(hw) {
knitr::knit_child('Monthly_Report_Template.qmd', envir = environment(), quiet = TRUE)
})
map_chr(tests, print)
file_NAME <- paste(year(Sys.Date()), '_', params$month, '_summary_data.csv'
, sep = '')
full_file_NAME <- paste(year(Sys.Date()), '_', params$month, '_testing_data.csv', sep = '')
data           <- read.csv(file = file_NAME)
athletes       <- unique(data$NAME)
full_data      <- read.csv(file = full_file_NAME)
full_data      <- full_data[full_data$NAME %in% athletes,] %>%
arrange(NAME)
full_data$DATE <- as.Date(full_data$DATE)
tests          <- full_data %>%
select(-NAME,
-DATE,
-AGE,
-IMTP_PEAK,
-DATE_MONTH,
-NORDBORD_L,
-NORDBORD_R,
-NORDBORD_DIFF,
-DSI,
-OLD,
-YOUNG,
-ADULT,
-CMJ_FLIGHT) %>%
names()
map_chr(tests, print)
#| output: asis
res <- purrr::map_chr(tests, \(hw) {
knitr::knit_child('Monthly_Report_Template.qmd', envir = environment(), quiet = TRUE)
})
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
?switch
View(data)
View(summary_data)
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
