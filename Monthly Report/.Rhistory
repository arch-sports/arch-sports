1, 0)) %>%
filter(athleteCount == 1) %>%
select(-athleteCount)
improvement_last <- if(nrow(athlete_current) == nrow(athlete_last)) {
athlete_current - athlete_last
} else if(nrow(athlete_last) == 0) {
athlete_current
} else {
athlete_last
}
debugSource("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
athlete_current - athlete_best
athlete_current - athlete_last
athlete <- 'Delaney Newton'
columns <- data %>%
select(-Date, -'Age At Testing') %>%
names()
athlete_current <- data_current[data_current$Name == athlete, 4:(ncol(data_current) - 3)] %>%
mutate(athleteCount = ifelse(count(data, Name)$n[count(data, Name)$Name == athlete] > 1,
1, 0)) %>%
filter(athleteCount == 1) %>%
select(-athleteCount)
athlete_last    <- data_last[data_last$Name == athlete, 4:(ncol(data_last) - 3)] %>%
mutate(athleteCount = ifelse(count(data, Name)$n[count(data, Name)$Name == athlete] > 1,
1, 0)) %>%
filter(athleteCount == 1) %>%
select(-athleteCount)
athlete_best    <- best_df[best_df$Name == athlete, 2:(ncol(best_df))] %>%
mutate(athleteCount = ifelse(count(data, Name)$n[count(data, Name)$Name == athlete] > 1,
1, 0)) %>%
filter(athleteCount == 1) %>%
select(-athleteCount)
improvement_last <- if(nrow(athlete_current) == nrow(athlete_last)) {
athlete_current - athlete_last
} else if(nrow(athlete_last) == 0) {
athlete_current
} else {
athlete_last
}
improvement_last <- mutate(improvement_last,
Name = athlete)
improve_last_df <- rbind(improve_last_df, improvement_last)
improve_last_df[is.na(improve_last_df)] <- 0
improvement_best <- if(nrow(athlete_current) == 0 || nrow(athlete_best) == 0){
athlete_best
} else {
athlete_current - athlete_best
}
athlete_best - athlete_last
athlete_best
athlete_current
athlete_current[1,] - athlete_best[1,]
athlete_current - athlete_last
athlete_best
athlete_current
summary(best_df)
View(best_df)
best_df <- best_df %>%
select(-Name) %>%
sapply(as.numeric)
best_df <- best_df %>%
select(-Name) %>%
sapply(as.data.frame(as.numeric))
best_df <- best_df %>%
select(-Name) %>%
sapply(function(x) as.numeric(x))
best_df <- data.frame()
find_min <- c('10 Yard Split', '20 Yard Sprint', '5-10-5', 'Nordbord % Diff')
# Get each athlete's best scores
for (athlete in athletes) {
athlete_data <- data[data$Name == athlete,] %>%
select(-'Age At Testing', -Date, -Young, -Old, -Adult)
best <- if(nrow(athlete_data) == 1){
athlete_data
} else {
sapply(athlete_data,
function(x) ifelse(x %in% find_min,
min(x, na.rm = 1),
max(x, na.rm = 1)))
}
best_df <- rbind(best_df, best[1,])
names(best_df) <- names(athlete_data)
}
best_df <- best_df %>%
select(-Name) %>%
sapply(function(x) as.numeric(x))
col <- 'Name'
best_df[,col]
best_df[col]
best_df[[col]
best_df[[col]]
best_df['Name']
data[col]
best_df <- data.frame()
find_min <- c('10 Yard Split', '20 Yard Sprint', '5-10-5', 'Nordbord % Diff')
# Get each athlete's best scores
for (athlete in athletes) {
athlete_data <- data[data$Name == athlete,] %>%
select(-'Age At Testing', -Date, -Young, -Old, -Adult)
best <- if(nrow(athlete_data) == 1){
athlete_data
} else {
sapply(athlete_data,
function(x) ifelse(x %in% find_min,
min(x, na.rm = 1),
max(x, na.rm = 1)))
}
best_df <- rbind(best_df, best[1,])
names(best_df) <- names(athlete_data)
}
best_df <-
for (col in names(best_df)) {
if (col != 'Name') {
best_df[col] <- as.numeric(best_df[col])
}
}
best_df[col]
best_df[col] <- as.numeric(best_df[col])
best_df <- data.frame()
find_min <- c('10 Yard Split', '20 Yard Sprint', '5-10-5', 'Nordbord % Diff')
# Get each athlete's best scores
for (athlete in athletes) {
athlete_data <- data[data$Name == athlete,] %>%
select(-'Age At Testing', -Date, -Young, -Old, -Adult)
best <- if(nrow(athlete_data) == 1){
athlete_data
} else {
as.data.frame(sapply(athlete_data,
function(x) ifelse(x %in% find_min,
min(x, na.rm = 1),
max(x, na.rm = 1))))
}
best_df <- rbind(best_df, best[1,])
names(best_df) <- names(athlete_data)
}
summary(best_df)
best_df <- best_df %>%
as.data.frame(sapply(as.numeric))
summary(best_df)
best_df <- as.data.frame(sapply(best_df, as.numeric))
summary(best_df)
best_df <- data.frame()
find_min <- c('10 Yard Split', '20 Yard Sprint', '5-10-5', 'Nordbord % Diff')
# Get each athlete's best scores
for (athlete in athletes) {
athlete_data <- data[data$Name == athlete,] %>%
select(-'Age At Testing', -Date, -Young, -Old, -Adult)
best <- if(nrow(athlete_data) == 1){
athlete_data
} else {
sapply(athlete_data,
function(x) ifelse(x %in% find_min,
min(x, na.rm = 1),
max(x, na.rm = 1)))
}
best_df <- rbind(best_df, best[1,])
names(best_df) <- names(athlete_data)
}
best_df <- as.data.frame(sapply(best_df[,2:ncol(best_df)], as.numeric))
View(best_df)
best_df <- data.frame()
find_min <- c('10 Yard Split', '20 Yard Sprint', '5-10-5', 'Nordbord % Diff')
# Get each athlete's best scores
for (athlete in athletes) {
athlete_data <- data[data$Name == athlete,] %>%
select(-'Age At Testing', -Date, -Young, -Old, -Adult)
best <- if(nrow(athlete_data) == 1){
athlete_data
} else {
sapply(athlete_data,
function(x) ifelse(x %in% find_min,
min(x, na.rm = 1),
max(x, na.rm = 1)))
}
best_df <- rbind(best_df, best[1,])
names(best_df) <- names(athlete_data)
}
best_df <- cbind(best_df$Name, as.data.frame(sapply(best_df[,2:ncol(best_df)], as.numeric)))
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
count_improvements_best
athlete <- 'Cole Freeman'
columns <- data %>%
select(-Date, -'Age At Testing') %>%
names()
athlete_current <- data_current[data_current$Name == athlete, 4:(ncol(data_current) - 3)] %>%
mutate(athleteCount = ifelse(count(data, Name)$n[count(data, Name)$Name == athlete] > 1,
1, 0)) %>%
filter(athleteCount == 1) %>%
select(-athleteCount)
athlete_last    <- data_last[data_last$Name == athlete, 4:(ncol(data_last) - 3)] %>%
mutate(athleteCount = ifelse(count(data, Name)$n[count(data, Name)$Name == athlete] > 1,
1, 0)) %>%
filter(athleteCount == 1) %>%
select(-athleteCount)
athlete_best    <- best_df[best_df$Name == athlete, 2:(ncol(best_df))] %>%
mutate(athleteCount = ifelse(count(data, Name)$n[count(data, Name)$Name == athlete] > 1,
1, 0)) %>%
filter(athleteCount == 1) %>%
select(-athleteCount)
improvement_last <- if(nrow(athlete_current) == nrow(athlete_last)) {
athlete_current - athlete_last
} else if(nrow(athlete_last) == 0) {
athlete_current
} else {
athlete_last
}
improvement_last <- mutate(improvement_last,
Name = athlete)
improve_last_df <- rbind(improve_last_df, improvement_last)
improve_last_df[is.na(improve_last_df)] <- 0
improvement_best <- if(nrow(athlete_current) == 0 || nrow(athlete_best) == 0){
athlete_best
} else {
athlete_current - athlete_best
}
View(athlete_current)
athlete_best    <- best_df[best_df$Name == athlete, 2:(ncol(best_df))] %>%
mutate(athleteCount = ifelse(count(data, Name)$n[count(data, Name)$Name == athlete] > 1,
1, 0)) %>%
filter(athleteCount == 1) %>%
select(-athleteCount)
best_df
best_df <- cbind(Name = best_df$Name, as.data.frame(sapply(best_df[,2:ncol(best_df)], as.numeric)))
athlete_best    <- best_df[best_df$Name == athlete, 2:(ncol(best_df))] %>%
mutate(athleteCount = ifelse(count(data, Name)$n[count(data, Name)$Name == athlete] > 1,
1, 0)) %>%
filter(athleteCount == 1) %>%
select(-athleteCount)
athlete_best    <- best_df[best_df$Name == athlete, 2:(ncol(best_df))] %>%
mutate(athleteCount = ifelse(count(data, Name)$n[count(data, Name)$Name == athlete] >= 1,
1, 0)) %>%
filter(athleteCount == 1) %>%
select(-athleteCount)
athlete_best    <- best_df[best_df$Name == athlete, 2:(ncol(best_df))] %>%
mutate(athleteCount = ifelse(count(data, Name)$n[count(data, Name)$Name == athlete] >= 1,
1, 0)) %>%
filter(athleteCount == 1) %>%
select(-athleteCount)
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
View(best_df)
debugSource("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
debugSource("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
best_df[best_df$`best_df$Name` == athlete, 2:ncol(best_df)]
debugSource("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
View(improve_best_df)
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
View(improve_best_df)
count_improvements_best
count_improvements_last
View(best_df)
View(data_current)
library(vtable)
sumtable(improve_best_df)
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
sumtable(improve_best_df, title = 'Improvement from Best Scores')
sumtable(improve_last_df, title = 'Improvement from Last Month')
View(improve_last_df)
data_last$Name[data_last$Name == 'Cole Freeman']
nrow(data_last$Name[data_last$Name == 'Cole Freeman'])
nrow(data_last$Name[data_last$Name == 'Delaney Newton'])
data_last$Name[data_last$Name == 'Delaney Newton']
length(data_last$Name[data_last$Name == 'Delaney Newton'])
length(data_last$Name[data_last$Name == 'Cole Freeman'])
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
list(.vars = lst(names(data)[!names(data)%in%"Name"]),
.funs = lst("mean" = mean, "max" = max, 'last' = last)) %>%
pmap(~ data %>% group_by(Name) %>% summarise_at(.x, .y))
%>% reduce(inner_join, by = "Name")
View(data)
?summarise_all
data %>%
group_by(Name, Date) %>%
summarise_at(
.vars = lst(names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing']),
data %>%
group_by(Name, Date) %>%
summarise_at(
.vars = lst(names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing')]),
.funs = list(best = max, current = last, avg = mean)
)
data %>%
group_by(Name, Date) %>%
summarise_at(
.vars = lst(names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing')]),
.funs = c(best = max, current = last, avg = mean)
)
data %>%
group_by(Name, Date) %>%
summarise_at(
.vars = lst(names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing')]),
.funs = c(max, last, mean)
)
data %>%
group_by(Name, Date) %>%
summarise_at(
.vars = names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing')],
.funs = c(best = max, current = last, avg = mean)
)
test <- data %>%
group_by(Name, Date) %>%
summarise_at(
.vars = names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing')],
.funs = c(best = max, current = last, avg = mean)
)
View(test)
test <- data %>%
group_by(Name) %>%
summarise_at(
.vars = names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing')],
.funs = c(best = max, current = last, avg = mean)
)
test <- data %>%
group_by(Name) %>%
summarise_at(
.vars = names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing', 'Young', 'Old', 'Adult')],
.funs = c(best = max, current = last, avg = mean)
)
?last
test <- data %>%
group_by(Name) %>%
summarise_at(
.vars = names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing', 'Young', 'Old', 'Adult')],
.funs = c(best = max, current = last, previous = nth(-2), avg = mean)
)
test <- data %>%
group_by(Name) %>%
summarise_at(
.vars = names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing', 'Young', 'Old', 'Adult')],
.funs = c(best = max, current = last, previous = nth(x, -2), avg = mean)
)
test <- data %>%
group_by(Name) %>%
summarise_at(
.vars = names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing', 'Young', 'Old', 'Adult')],
.funs = c(best = max, current = last, previous = nth(.x, -2), avg = mean)
)
fun_list <- list(
min = ~min(.x, na.rm = TRUE),
max = ~min(.x, na.rm = TRUE),
last = ~last(.x),
previous = ~nth(.x, -2),
avg = ~mean(.x, na.rm = TRUE)
)
test <- data %>%
group_by(Name) %>%
summarise_at(
.vars = names(data)[!names(data)%in%c("Name", 'Date', 'Age At Testing', 'Young', 'Old', 'Adult')],
.funs = fun_list
)
sumtable(test)
sumtable(data)
data %>%
group_by(month(Date)) %>%
sumtable()
data %>%
group_by(month(Date)) %>%
summarise()
unique(month(data$Date))
data %>%
group_by(month(Date)) %>%
summarise(.funs = fun_list)
data %>%
group_by(Name) %>%
summarise_at(
.vars = names(data)[!names(data) %in% c('Name', 'Date', 'Age At Testing', 'DSI', 'Young', 'Old', 'Adult')],
.funs = fun_list
)
View(fun_list)
data %>%
group_by(Name) %>%
summarise_at(
.vars = names(data)[!names(data) %in% c('Name', 'Date', 'Age At Testing', 'DSI', 'Young', 'Old', 'Adult')],
.funs = fun_list
) %>%
sumtable()
last(data$`CMJ - Flight`[data$Name == 'Cole Freeman'])
?sd
data <- read_sheet(test_url, sheet = test_sheet)
library(googlesheets4)
library(tidyverse)
library(vtable)
data <- read_sheet(test_url, sheet = test_sheet)
# Import testing data
test_url <- 'https://docs.google.com/spreadsheets/d/1VzdlsDCA-X8HVKvUktG1A5XZNiq3IuOwX2Zbq8k6Iu0/edit?gid=2006047091#gid=2006047091'
test_sheet <- 'MASTER DATA TABLE'
data <- read_sheet(test_url, sheet = test_sheet)
# Add dummy column for whether athlete <= 13 years old
data <- data %>%
mutate(Young = ifelse(data$`Age At Testing` <= 13, 1, 0),
Old   = ifelse(data$`Age At Testing` > 13 & data$`Age At Testing` <= 18, 1, 0),
Adult = ifelse(data$`Age At Testing` > 18, 1, 0)) %>%
filter(Adult == 0)
# Add dummy column for whether athlete <= 13 years old
data <- data %>%
mutate(Young = ifelse(data$`Age At Testing` <= 13, 1, 0),
Old   = ifelse(data$`Age At Testing` > 13 & data$`Age At Testing` <= 18, 1, 0),
Adult = ifelse(data$`Age At Testing` > 18, 1, 0))
# Add dummy column for whether athlete <= 13 years old
data <- data %>%
mutate(Young = ifelse(data$`Age At Testing` <= 13, 1, 0),
Old   = ifelse(data$`Age At Testing` > 13 & data$`Age At Testing` <= 18, 1, 0),
Adult = ifelse(data$`Age At Testing` > 18, 1, 0),
Month = month(Date))
View(data)
# Get last month's and this month's testing data
data_last    <- data[month(data$Date) == month(Sys.Date()) - 1,]
data_current <- data[month(data$Date) == month(Sys.Date()),]
func_list <- list(
Best = ~max(.x, na.rm = TRUE),
Current = ~last(.x, na_rm = TRUE),
Last = ~nth(.x, -2, na_rm = TRUE),
Best_change = ~(max(.x, na.rm = TRUE) - last(.x, na_rm = TRUE)),
Best_perc = ~((max(.x, na.rm = TRUE) - last(.x, na_rm = TRUE))/max(.x, na.rm = TRUE)),
Last_change = ~(nth(.x, -2, na_rm = TRUE) - last(.x, na_rm = TRUE)),
Last_perc = ~((nth(.x, -2, na_rm = TRUE) - last(.x, na_rm = TRUE))/nth(.x, -2, na_rm = TRUE))
)
var_list <- c(
'Name',
'Date',
'Age At Testing',
'Young',
'Old',
'Adult',
'DSI',
'Nordbord % Diff'
)
summary_data <- data %>%
group_by(Name) %>%
summarise_at(
.vars = names(data)[!names(data) %in% var_list],
.funs = func_list
)
View(summary_data)
?pivot_longer
summary_data <- data %>%
group_by(Name, Month) %>%
summarise_at(
.vars = names(data)[!names(data) %in% var_list],
.funs = func_list
)
# Add dummy column for whether athlete <= 13 years old
data <- data %>%
mutate(Young = ifelse(data$`Age At Testing` <= 13, 1, 0),
Old   = ifelse(data$`Age At Testing` > 13 & data$`Age At Testing` <= 18, 1, 0),
Adult = ifelse(data$`Age At Testing` > 18, 1, 0),
Month = month(Date))
# Get last month's and this month's testing data
data_last    <- data[month(data$Date) == month(Sys.Date()) - 1,]
data_current <- data[month(data$Date) == month(Sys.Date()),]
func_list <- list(
Best = ~max(.x, na.rm = TRUE),
Current = ~last(.x, na_rm = TRUE),
Last = ~nth(.x, -2, na_rm = TRUE),
Best_change = ~(max(.x, na.rm = TRUE) - last(.x, na_rm = TRUE)),
Best_perc = ~((max(.x, na.rm = TRUE) - last(.x, na_rm = TRUE))/max(.x, na.rm = TRUE)),
Last_change = ~(nth(.x, -2, na_rm = TRUE) - last(.x, na_rm = TRUE)),
Last_perc = ~((nth(.x, -2, na_rm = TRUE) - last(.x, na_rm = TRUE))/nth(.x, -2, na_rm = TRUE))
)
var_list <- c(
'Name',
'Date',
'Age At Testing',
'Young',
'Old',
'Adult',
'DSI',
'Nordbord % Diff'
)
summary_data <- data %>%
group_by(Name, Month) %>%
summarise_at(
.vars = names(data)[!names(data) %in% var_list],
.funs = func_list
)
summary_data <- data %>%
group_by(Name, Month) %>%
summarise_at(
.vars = names(data)[!names(data) %in% var_list],
.funs = func_list
)
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
data$Name
summary_data <- data %>%
select(-Young, - Old, -Adult, -Month, -'CMJ - Flight', -'IMTP Peak',) %>%
group_by(Name, Month) %>%
summarise_at(
.vars = names(data)[!names(data) %in% var_list],
.funs = func_list
)
summary_data <- data %>%
select(-Young, - Old, -Adult, -Month, -'CMJ - Flight', -'IMTP Peak',) %>%
group_by(Name) %>%
summarise_at(
.vars = names(data)[!names(data) %in% var_list],
.funs = func_list
)
write.csv(summary_data,
file = paste(year(Sys.Date()), '_', month(Sys.Date()), '_Monthly_Report.csv', sep = ''),
row.names = FALSE)
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
View(data)
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Monthly Report/monthly_report.R")
?melt
??melt
library(data.table)
melt(summary_data)
