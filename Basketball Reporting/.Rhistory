t_output_filter <- t(output_filter)
kable(t_output_filter,
caption = 'Counts of Athletes with Ecc. Assym. >10%',
row.names = FALSE,
col.names = c(' ', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = ''))
)
kable(t_output_filter,
caption = 'Counts of Athletes with Ecc. Assym. >10%',
row.names = FALSE,
col.names = c(' ', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = ''))
)
data_filter <- data[data$con_mean_force_assym > 0.10, ]
data_filter <- data[data$con_mean_force_assym > 0.10, ]
total <- length(data_filter$jump_height)
quad_count <- length(which(data_filter$quad == 'N'))
hip_count <- length(which(data_filter$gator == 'N'))
lat_count <- length(which(data_filter$lat == 'Y'))
calf_count <- length(which(data_filter$calf == 'Y'))
pain_count <- length(which(data_filter$pain == 'Y'))
output_filter <- data.frame(
quad = c('Quad Tightness', quad_count, round(quad_count/total*100, 1)),
hip = c('Hip Weakness', hip_count, round(hip_count/total*100, 1)),
lat = c('Lat Tightness', lat_count, round(lat_count/total*100, 1)),
calf = c('Calf Tightness', calf_count, round(calf_count/total*100, 1)),
pain = c('Pain History', pain_count, round(pain_count/total*100, 1))
)
t_output_filter <- t(output_filter)
kable(t_output_filter,
caption = 'Counts of Athletes with Con. Assym. >10%',
row.names = FALSE,
col.names = c(' ', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = ''))
)
data_filter <- data[data$peak_assym > 0.10, ]
total <- length(data_filter$jump_height)
quad_count <- length(which(data_filter$quad == 'N'))
hip_count <- length(which(data_filter$gator == 'N'))
lat_count <- length(which(data_filter$lat == 'Y'))
calf_count <- length(which(data_filter$calf == 'Y'))
pain_count <- length(which(data_filter$pain == 'Y'))
output_filter <- data.frame(
quad = c('Quad Tightness', quad_count, round(quad_count/total*100, 1)),
hip = c('Hip Weakness', hip_count, round(hip_count/total*100, 1)),
lat = c('Lat Tightness', lat_count, round(lat_count/total*100, 1)),
calf = c('Calf Tightness', calf_count, round(calf_count/total*100, 1)),
pain = c('Pain History', pain_count, round(pain_count/total*100, 1))
)
t_output_filter <- transpose(output_filter)
kable(t_output_filter,
caption = 'Counts of Athletes with Landing Assym. >10%',
row.names = FALSE,
col.names = c(' ', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = ''))
)
View(t_output_filter)
View(t_output_all)
View(data)
?add_header_above
x <- knitr::kable(head(mtcars), "html")
# Add a row of header with 3 columns on the top of the table. The column
# span for the 2nd and 3rd one are 5 & 6.
add_header_above(x, c(" ", "Group 1" = 5, "Group 2" = 6))
x <- knitr::kable(head(mtcars), "html")
# Add a row of header with 3 columns on the top of the table. The column
# span for the 2nd and 3rd one are 5 & 6.
add_header_above(x, c(" ", "Group 1" = 5, "Group 2" = 6))
t_output_all <- t(output_all)
kable_all <- kable(t_output_all,
caption = 'Counts of Athletes',
row.names = FALSE,
col.names = c('', 'Count', paste('% Total (', length(data$jump_height), ')', sep = '')),
format = 'html',
align = 'lcc',
valign = 't'
)
kable_ecc <- kable(t_output_filter,
caption = 'Athletes with Ecc. Assym. >10%',
row.names = FALSE,
col.names = c('', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = '')),
format = 'html',
align = 'lcc',
valign = 't'
)
kable_con <- kable(t_output_filter,
caption = 'Athletes with Con. Assym. >10%',
row.names = FALSE,
col.names = c('', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = '')),
format = 'html',
align = 'lcc',
valign = 't'
)
kable_land <- kable(t_output_filter,
caption = 'Athletes with Landing Assym. >10%',
row.names = FALSE,
col.names = c('', 'Count', paste('% Total (', length(data_filter$jump_height), ')', sep = '')),
format = 'html',
align = 'lcc',
valign = 't'
)
cbind(kable_ecc, kable_con, kable_land)
kable_full <- cbind(kable_ecc, kable_con, kable_land)
kable_full
x <- knitr::kable(head(mtcars), "html")
# Add a row of header with 3 columns on the top of the table. The column
# span for the 2nd and 3rd one are 5 & 6.
add_header_above(x, c(" ", "Group 1" = 5, "Group 2" = 6))
athlete <- "Latterio Robinson"
quarto_render('Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
library(quarto)
quarto_render('Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
setwd('Basketball Reporting')
quarto_render('Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Basketball Reporting/Make Reports.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Basketball Reporting/Make Reports.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Basketball Reporting/Make Reports.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Basketball Reporting/Make Reports.R")
athlete_col <- data[data$Athlete == athlete, ] %>%
mutate(assym = (ecc_mean_force_assym >= 0.1 || con_mean_force_assym >= 0.1 || peak_assym >= 0.1), calf = (calf == 'Y'), lat = (lat == 'Y'), quad = (quad == 'Y'), gator = (gator == 'N')) %>%
select(assym, calf, lat, quad, gator) %>%
t()
recommend <- c(
assym = 'Unilateral Strength Training, including:\n
-- Lunges -- Split Squats\n
Technical Plyometric Drills, including:\n
-- Hop and Stick',
calf = 'Calf Stretches, including:\n
-- Wall Ankle Dorsiflexion -- 1/2 Kneeling Calf Stretch',
lat = 'Lat Stretches, including:\n
-- Prayer Stretches -- Dead Hangs -- Wall/Floor Angels',
quad = 'Quad Stretches, including:\n
-- Standing Quad Pull -- Hurdler Stretch -- Couch Stretch',
hip = 'Hip Abduction, including:\n
-- Lying Side Leg Raise -- Side Plank -- Gator Plank'
)
type <- c('High Assymetry',
'Calf Tightness',
'Lat Tightness',
'Quad Tightness',
'Hip Weakness')
output <- data.frame(
Type = type,
Result = athlete_col,
Recommend = recommend
)
colnames(output) <- c('Type', 'Results', 'Recommend')
output_final <- output[output$Result,] %>% select(Type, Recommend)
View(output_final)
kable(output_final,
col.names = c('Result', 'Recommendation'),
row.names = FALSE,
) %>%
row_spec(row = 1:(nrow(output_final) - 1), hline_after = TRUE) %>%
column_spec(column = 2, width = '70em')
library(kableExtra)
kable(output_final,
col.names = c('Result', 'Recommendation'),
row.names = FALSE,
) %>%
row_spec(row = 1:(nrow(output_final) - 1), hline_after = TRUE) %>%
column_spec(column = 2, width = '70em')
athlete <- 'Addison Tyree-Rodriguez'
athlete_col <- data[data$Athlete == athlete, ] %>%
mutate(assym = (ecc_mean_force_assym >= 0.1 || con_mean_force_assym >= 0.1 || peak_assym >= 0.1), calf = (calf == 'Y'), lat = (lat == 'Y'), quad = (quad == 'Y'), gator = (gator == 'N')) %>%
select(assym, calf, lat, quad, gator) %>%
t()
recommend <- c(
assym = 'Unilateral Strength Training, including:\n
-- Lunges -- Split Squats\n
Technical Plyometric Drills, including:\n
-- Hop and Stick',
calf = 'Calf Stretches, including:\n
-- Wall Ankle Dorsiflexion -- 1/2 Kneeling Calf Stretch',
lat = 'Lat Stretches, including:\n
-- Prayer Stretches -- Dead Hangs -- Wall/Floor Angels',
quad = 'Quad Stretches, including:\n
-- Standing Quad Pull -- Hurdler Stretch -- Couch Stretch',
hip = 'Hip Abduction, including:\n
-- Lying Side Leg Raise -- Side Plank -- Gator Plank'
)
type <- c('High Assymetry',
'Calf Tightness',
'Lat Tightness',
'Quad Tightness',
'Hip Weakness')
output <- data.frame(
Type = type,
Result = athlete_col,
Recommend = recommend
)
colnames(output) <- c('Type', 'Results', 'Recommend')
output_final <- output[output$Result || output$Results != 'NA',] %>% select(Type, Recommend)
View(output_final)
output <- data.frame(
Type = type,
Result = athlete_col,
Recommend = recommend
)
colnames(output) <- c('Type', 'Results', 'Recommend')
output_final <- output[output$Result && output$Results != 'NA',] %>% select(Type, Recommend)
recommend <- c(
assym = 'Unilateral Strength Training, including:\n
-- Lunges -- Split Squats\n
Technical Plyometric Drills, including:\n
-- Hop and Stick',
calf = 'Calf Stretches, including:\n
-- Wall Ankle Dorsiflexion -- 1/2 Kneeling Calf Stretch',
lat = 'Lat Stretches, including:\n
-- Prayer Stretches -- Dead Hangs -- Wall/Floor Angels',
quad = 'Quad Stretches, including:\n
-- Standing Quad Pull -- Hurdler Stretch -- Couch Stretch',
hip = 'Hip Abduction, including:\n
-- Lying Side Leg Raise -- Side Plank -- Gator Plank'
)
type <- c('High Assymetry',
'Calf Tightness',
'Lat Tightness',
'Quad Tightness',
'Hip Weakness')
output <- data.frame(
Type = type,
Result = athlete_col,
Recommend = recommend
)
colnames(output) <- c('Type', 'Results', 'Recommend')
output_final <- output[output$Result && output$Results != 'NA',] %>% select(Type, Recommend)
View(output_final)
View(output)
output[output$Results,]
output[output$Results == TRUE,]
output[output$Results != NA,]
output[complete.case(output$Results),]
output[complete.cases(output$Results),]
athlete <- 'Braven Kincaid'
athlete_col <- data[data$Athlete == athlete, ] %>%
mutate(assym = (ecc_mean_force_assym >= 0.1 || con_mean_force_assym >= 0.1 || peak_assym >= 0.1), calf = (calf == 'Y'), lat = (lat == 'Y'), quad = (quad == 'Y'), gator = (gator == 'N')) %>%
select(assym, calf, lat, quad, gator) %>%
t()
recommend <- c(
assym = 'Unilateral Strength Training, including:\n
-- Lunges -- Split Squats\n
Technical Plyometric Drills, including:\n
-- Hop and Stick',
calf = 'Calf Stretches, including:\n
-- Wall Ankle Dorsiflexion -- 1/2 Kneeling Calf Stretch',
lat = 'Lat Stretches, including:\n
-- Prayer Stretches -- Dead Hangs -- Wall/Floor Angels',
quad = 'Quad Stretches, including:\n
-- Standing Quad Pull -- Hurdler Stretch -- Couch Stretch',
hip = 'Hip Abduction, including:\n
-- Lying Side Leg Raise -- Side Plank -- Gator Plank'
)
type <- c('High Assymetry',
'Calf Tightness',
'Lat Tightness',
'Quad Tightness',
'Hip Weakness')
output <- data.frame(
Type = type,
Result = athlete_col,
Recommend = recommend
)
colnames(output) <- c('Type', 'Results', 'Recommend')
output_final <- output[complete.cases(output$Result),] %>% select(Type, Recommend)
na.omit(output)
na.omit(output[output$Results, ])
athlete <- 'Addison Tyree-Rodriguez'
athlete_col <- data[data$Athlete == athlete, ] %>%
mutate(assym = (ecc_mean_force_assym >= 0.1 || con_mean_force_assym >= 0.1 || peak_assym >= 0.1), calf = (calf == 'Y'), lat = (lat == 'Y'), quad = (quad == 'Y'), gator = (gator == 'N')) %>%
select(assym, calf, lat, quad, gator) %>%
t()
recommend <- c(
assym = 'Unilateral Strength Training, including:\n
-- Lunges -- Split Squats\n
Technical Plyometric Drills, including:\n
-- Hop and Stick',
calf = 'Calf Stretches, including:\n
-- Wall Ankle Dorsiflexion -- 1/2 Kneeling Calf Stretch',
lat = 'Lat Stretches, including:\n
-- Prayer Stretches -- Dead Hangs -- Wall/Floor Angels',
quad = 'Quad Stretches, including:\n
-- Standing Quad Pull -- Hurdler Stretch -- Couch Stretch',
hip = 'Hip Abduction, including:\n
-- Lying Side Leg Raise -- Side Plank -- Gator Plank'
)
type <- c('High Assymetry',
'Calf Tightness',
'Lat Tightness',
'Quad Tightness',
'Hip Weakness')
output <- data.frame(
Type = type,
Result = athlete_col,
Recommend = recommend
)
colnames(output) <- c('Type', 'Results', 'Recommend')
output_final <- na.omit(output[output$Result,]) %>% select(Type, Recommend)
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Basketball Reporting/Make Reports.R")
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Basketball Reporting/Make Reports.R")
athlete
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
view(recommend)
View(t_output_filter)
View(recommend)
recommend[["assym"]]
recommend["assym"]
View(output_final)
View(recommend)
recommend[["assym"]][1]
cat(recommend["assym"])
recommend <- c(
assym = 'Unilateral Strength Training and Plyometric Drills, including:\n
-- Lunges -- Split Squats -- Snap Down\n ',
calf = 'Calf Stretches, including:\n
-- Wall Ankle Dorsiflexion -- 1/2 Kneeling Calf Stretch',
lat = 'Lat Stretches, including:\n
-- Prayer Stretches -- Dead Hangs -- Wall/Floor Angels',
quad = 'Quad Stretches, including:\n
-- Standing Quad Pull -- Hurdler Stretch -- Couch Stretch',
hip = 'Hip Abduction, including:\n
-- Lying Side Leg Raise -- Side Plank -- Gator Plank'
)
cat(recommend["assym"])
??kable
?kableExtra::kable
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
athlete<-'Braven Kincaid'
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
?row_spec
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Basketball Reporting/Make Reports.R")
rlang::last_trace()
rlang::last_trace(drop = FALSE)
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
athlete_col <- data[data$Athlete == athlete, ] %>%
mutate(assym = (ecc_mean_force_assym >= 0.1 || con_mean_force_assym >= 0.1 || peak_assym >= 0.1), calf = (calf == 'Y'), lat = (lat == 'Y'), quad = (quad == 'Y'), gator = (gator == 'N')) %>%
select(assym, calf, lat, quad, gator) %>%
t()
recommend <- c(
first = 'Unilateral Strength Training/Plyometric Drills, including:\n
-- Lunges -- Split Squats -- Snap Downss',
calf = 'Calf Stretches, including:\n
-- Wall Ankle Dorsiflexion -- 1/2 Kneeling Calf Stretch',
lat = 'Lat Stretches, including:\n
-- Prayer Stretches -- Dead Hangs -- Wall/Floor Angels',
quad = 'Quad Stretches, including:\n
-- Standing Quad Pull -- Hurdler Stretch -- Couch Stretch',
hip = 'Hip Abduction, including:\n
-- Lying Side Leg Raise -- Side Plank -- Gator Plank'
)
type <- c('High Assymetry',
'Calf Tightness',
'Lat Tightness',
'Quad Tightness',
'Hip Weakness')
output <- data.frame(
Type = type,
Result = athlete_col,
Recommend = recommend
)
colnames(output) <- c('Type', 'Results', 'Recommend')
output_final <- na.omit(output[output$Result,]) %>% select(Type, Recommend)
colnames(output) <- c('Type', 'Results', 'Recommend')
output_final <- na.omit(output[output$Result,]) %>% select(Type, Recommend)
if(nrow(output_final) > 0){
kable(output_final,
col.names = c('Result', 'Recommendation'),
row.names = FALSE,
) %>%
row_spec(row = 1:(nrow(output_final) - 1), hline_after = TRUE) %>%
column_spec(column = 2, width = '32em')
} else {
print('\t\tDue to your performance on the tests, we have no specific recommendations on areas requiring immediate improvement. Following a sport-specific strength and conditioning program under the supervision of a certified professional will help you to continue to improve.')
}
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
quarto_render('Scripts/Individual_Report.qmd',
output_format = 'pdf',
output_file = paste(athlete, '.pdf', sep = ""),
execute_params = list(Athlete = athlete))
source("C:/Users/Caitie Mayo/Desktop/GitHub/arch-sports/Basketball Reporting/Make Reports.R")
