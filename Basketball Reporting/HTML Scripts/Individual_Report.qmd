---
title: \Huge `r params$Athlete`
title-block-style: plain
author: \huge Architech Sports and Physical Therapy
format: 
  html:
    fig-width: 4
    fig-height: 2.25
    fig-pos: h
    embed-resources: true
    output-file: '`r paste(gsub("_", "/", params$Team), "_", params$Athlete, sep = "")`'
    output-ext: 'html'
preserve-tabs: true
tab-stop: 4
fig-cap-location: bottom
fig-align: center
tbl-cap-location: top
margin-top: 1.0in
margin-left: 0.75in
editor: visual
params:
  Athlete: 'NA'
  Team: 'NA'
execute: 
  cache: false
  echo: false
  warning: false
  error: false
---

![](../Logos/Architech+Sports+Logo.png){fig-align="center" width="514"} ![](../Logos/pro_skills.jpg){fig-align="center"} {{< pagebreak >}}

```{r}
#setwd(getSrcDirectory(function(){}))
```

## Test Results

```{r}
#| label: fig-cmj
#| layout-ncol: 2

library(data.table)
library(ggplot2)
library(tidyverse)
library(knitr)
library(vtable)
library(dplyr)
library(kableExtra)

data <- read.csv(file = '../Data/pro_skills_testing.csv') %>%
  mutate(jump_height = jump_height*2.54, Team = gsub('/', '_', Team), Athlete = paste(First, Last, sep = " "))
data <- data[!is.na(data$jump_height),]

norms_cmj <- read.csv(file = '../Data/norms_basketball.csv')

ggplot(data, mapping = aes(x = jump_height)) +
  geom_rect(xmin = norms_cmj$'Jump.Height..cm.'[norms_cmj$Percentile == '25th'],
            xmax = norms_cmj$'Jump.Height..cm.'[norms_cmj$Percentile == '75th'],
            ymin = 0,
            ymax = Inf,
            fill = 'grey',
            alpha = 0.3) +
  geom_density(fill = 'red', alpha = 0.5) +
  geom_vline(xintercept = data$jump_height[data$Athlete == params$Athlete]) +
  xlab('Countermovement Jump Height in centimeters') +
  ylab(element_blank()) +
  theme(axis.text.y = element_blank(),
                axes.ticks.y = element_blank())

ggplot(data, mapping = aes(x = rsi)) +
  geom_rect(xmin = norms_cmj$"Modified.RSI..m.s."[norms_cmj$Percentile == '25th'],
            xmax = norms_cmj$"Modified.RSI..m.s."[norms_cmj$Percentile == '75th'],
            ymin = 0,
            ymax = Inf,
            fill = 'grey',
            alpha = 0.3) +
  geom_density(fill = 'red', alpha = 0.5) +
  geom_vline(xintercept = data$rsi[data$Athlete == params$Athlete]) +
  xlab('Reactive Strength Index - Modified') +
  ylab(element_blank()) +
  theme(axis.text.y = element_blank(),
                axes.ticks.y = element_blank())
```

```{r}
data[data$Athlete == params$Athlete, ] %>%
  select(jump_height, rsi, ecc_mean_force_assym, con_mean_force_assym, peak_assym,  calf, lat, quad, gator, pain) %>%
  kable(digits = 2, 
        format.args = list(scientific = FALSE),
        col.names = c('CMJ', 'mRSI', 'Ecc.', 'Con.', 'Landing', 'Calf', 'Lat', 'Quad', 'Hip Weakness', 'Pain History'),
        row.names = FALSE) %>%
  kable_styling(bootstrap_options = c('striped', 'hover')) %>%
  add_header_above(
    c('',
      '',
      'Assymetries' = 3,
      'Tightness' = 3,
      '',
      ''),
    line = FALSE,
    underline = FALSE,
    bold = TRUE)
```

## Recommendations

```{r}
athlete_col <- data[data$Athlete == params$Athlete, ] %>%
  mutate(assym = (ecc_mean_force_assym >= 0.1 || con_mean_force_assym >= 0.1 || peak_assym >= 0.1), calf = (calf == 'Y'), lat = (lat == 'Y'), quad = (quad == 'Y'), gator = (gator == 'N')) %>%
  select(assym, calf, lat, quad, gator) %>%
  t()

recommend <- c(
  first = 'Unilateral Strength Training/Plyometric Drills, including:\n
  -- Lunges -- Split Squats -- Snap Downss',
  
  calf = 'Calf Stretches, including:\n
  -- Wall Ankle Dorsiflexion -- 1/2 Kneeling Calf Stretch',
  
  lat = 'Lat Stretches, including:\n
  -- Prayer Stretches -- Dead Hangs -- Wall/Floor Angels',
  
  quad = 'Quad Stretches, including:\n
  -- Standing Quad Pull -- Hurdler Stretch -- Couch Stretch',
  
  hip = 'Hip Abduction, including:\n
  -- Lying Side Leg Raise -- Side Plank -- Gator Plank'
)

type <- c('High Assymetry', 
           'Calf Tightness', 
           'Lat Tightness', 
           'Quad Tightness', 
           'Hip Weakness')

output <- data.frame(
  Type = type,
  Result = athlete_col,
  Recommend = recommend
)
output_empty <- data.frame(
  Result = c('General Strength\nand Conditioning'),
  Recommend = c("Follow a general strength and conditioning\nprogram under the guidance of a certified professional.")
)
colnames(output) <- c('Type', 'Results', 'Recommend')

output_final <- na.omit(output[output$Result,]) %>% select(Type, Recommend)

if(nrow(output_final) > 0){
  kable(output_final,
      col.names = c('Result', 'Recommendation'),
      row.names = FALSE,
    ) %>%
  kable_styling(bootstrap_options = c('striped', 'hover')) %>%
  row_spec(row = 1:(nrow(output_final) - 1), hline_after = TRUE) %>%
  column_spec(column = 2, width = '32em')
} else {
  kable(output_empty,
        col.names = c('Result', 'Recommendation'),
        row.names = FALSE
        ) %>%
    kable_styling(bootstrap_options = c('striped', 'hover')) %>%
    column_spec(column = 1, width = '15em') %>%
    column_spec(column = 2, width = '25em')
}


```

::: {contact}
<p>

|   *If you have any questions regarding these recommendations, please contact Architech Sports and Physical Therapy at* (980) 207-2707 *and mention that you are with Pro Skills Basketball*

</p>
:::
