---
title: \Huge `r params$Athlete`
title-block-style: plain
author: \huge Architech Sports and Physical Therapy
format: 
  pdf:
    fig-width: 4
    fig-height: 2.25
    fig-pos: h

    output-file: '`r paste(gsub("_", "/", params$Team), "_", params$Athlete, sep = "")`'
    output-ext: 'pdf'
preserve-tabs: true
tab-stop: 4
fig-cap-location: bottom
fig-align: center
tbl-cap-location: top
margin-top: 1.0in
margin-left: 0.75in
editor: visual
params:
  Athlete: 'NA'
  Team: 'NA'
execute: 
  cache: false
  echo: false
  warning: false
  error: false
---

![](./Logos/Architech+Sports+Logo.png){fig-align="center" width="514"} ![](./Logos/pro_skills.jpg){fig-align="center"} {{< pagebreak >}}

```{r}
#setwd(getSrcDirectory(function(){}))
```

## Test Results

```{r}
#| label: fig-cmj
#| layout-ncol: 2

library(data.table)
library(ggplot2)
library(tidyverse)
library(knitr)
library(vtable)
library(dplyr)
library(kableExtra)

data <- read.csv(file = './Data/pro_skills_testing.csv') %>%
  mutate(jump_height = jump_height*2.54, Team = gsub('/', '_', Team), Athlete = paste(First, Last, sep = " "))
data <- data[!is.na(data$jump_height),]

norms_cmj <- read.csv(file = './Data/norms_basketball.csv')

ggplot(data, mapping = aes(x = jump_height)) +
  geom_rect(xmin = norms_cmj$'Jump.Height..cm.'[norms_cmj$Percentile == '25th'],
            xmax = norms_cmj$'Jump.Height..cm.'[norms_cmj$Percentile == '75th'],
            ymin = 0,
            ymax = Inf,
            fill = 'grey',
            alpha = 0.3) +
  geom_density(fill = 'red', alpha = 0.5) +
  geom_vline(xintercept = data$jump_height[data$Athlete == params$Athlete]) +
  xlab('Countermovement Jump Height in centimeters') +
  ylab(element_blank()) +
  theme(axis.text.y = element_blank(),
                axes.ticks.y = element_blank())

ggplot(data, mapping = aes(x = rsi)) +
  geom_rect(xmin = norms_cmj$"Modified.RSI..m.s."[norms_cmj$Percentile == '25th'],
            xmax = norms_cmj$"Modified.RSI..m.s."[norms_cmj$Percentile == '75th'],
            ymin = 0,
            ymax = Inf,
            fill = 'grey',
            alpha = 0.3) +
  geom_density(fill = 'red', alpha = 0.5) +
  geom_vline(xintercept = data$rsi[data$Athlete == params$Athlete]) +
  xlab('Reactive Strength Index - Modified') +
  ylab(element_blank()) +
  theme(axis.text.y = element_blank(),
                axes.ticks.y = element_blank())
```

```{r}
data[data$Athlete == params$Athlete, ] %>%
  select(jump_height, rsi, ecc_mean_force_assym, con_mean_force_assym, peak_assym,  calf, lat, quad, gator, pain) %>%
  kable(caption = 'Raw data from testing.', 
        digits = 2, 
        format.args = list(scientific = FALSE),
        col.names = c('CMJ', 'mRSI', 'Ecc.', 'Con.', 'Landing', 'Calf', 'Lat', 'Quad', 'Hip Weakness', 'Pain History'),
        row.names = FALSE) %>%
  add_header_above(
    c('',
      '',
      'Assymetries' = 3,
      'Tightness' = 3,
      '',
      ''),
    line = FALSE,
    underline = FALSE,
    bold = TRUE)
```

## Recommendations

```{r}
athlete_col <- data[data$Athlete == params$Athlete, ] %>%
  mutate(assym = (ecc_mean_force_assym >= 0.1 || con_mean_force_assym >= 0.1 || peak_assym >= 0.1), calf = (calf == 'Y'), lat = (lat == 'Y'), quad = (quad == 'Y'), gator = (gator == 'N')) %>%
  select(assym, calf, lat, quad, gator) %>%
  t()



recommend <- c(
  assym1 = 'Unilateral Strength Training, including:',
  assym2 = '-Lunges',
  assym3 = '-Split Squats',
  assym4 = 'Technical Plyometric Drills, including:',
  assym5 = '-Snap Downs',
  assym6 = '-Hop and Stick',
  
  calf1 = 'Calf Stretches, including:',
  calf2 = '-Wall Ankle Dorsiflexion',
  calf3 = '-1/2 Kneeling Calf Stretch',
  
  lat1 = 'Lat Stretches, including:',
  lat2 = '-Prayer Stretch',
  lat3 = '-Dead Hangs',
  lat4 = '-Wall/Floor Angels',
  
  quad1 = 'Quad Stretches, including:',
  quad2 = '-Standing Quad Pull',
  quad3 = '-Hurdler Stretch',
  quad4 = '-Couch Stretch',
  
  hip1 = 'Hip Abduction, including:',
  hip2 = '-Lying Side Leg Raise',
  hip3 = '-Side Plank',
  hip4 = '-Gator Plank'
)

type <- c('High Assymetry', 
           'High Assymetry',
           'High Assymetry',
           'High Assymetry',
           'High Assymetry',
           'High Assymetry',
           'Calf Tightness', 
           'Calf Tightness',
           'Calf Tightness',
           'Lat Tightness', 
           'Lat Tightness',
           'Lat Tightness',
           'Lat Tightness',
           'Quad Tightness', 
           'Quad Tightness',
           'Quad Tightness',
           'Quad Tightness',
           'Hip Weakness',
           'Hip Weakness',
           'Hip Weakness',
           'Hip Weakness')

output <- data.frame(
  Type = type,
  Recommend = recommend
)

for(row in 1:nrow(output)){
  output$Result[row] <- switch(output$Type[row],
                               "High Assymetry" = athlete_col['assym',],
                               'Calf Tightness' = athlete_col['calf',],
                               'Lat Tightness' = athlete_col['lat',],
                               'Quad Tightness' = athlete_col['quad',],
                               'Hip Weakness' = athlete_col['gator',])
}

#colnames(output) <- c('Type', 'Results', 'Recommend')

output_final <- output[output$Result,] %>% select(Type, Recommend)

kable(output_final$Recommend,
      col.names = c('Recommendation'),
      row.names = FALSE,
      escape = FALSE
    ) %>%
  pack_rows(index = table(fct_inorder(output_final$Type))) %>%
  #kable_styling(latex)
  #add_indent(positions = 1:nrow(output_final), all_cols = FALSE, target_cols = 2) %>%
  column_spec(column = 2, width = '70em')

```


